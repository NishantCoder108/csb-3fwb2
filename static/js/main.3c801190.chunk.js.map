{"version":3,"sources":["context/AppContext.js","components/ViewBudget.js","components/EditBudget.js","components/Budget.js","components/ExpenseTotal.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpenseForm.js","components/Remaining.js","App.js","index.js"],"names":["AppReducer","state","action","type","expenses","payload","filter","expense","id","budget","initialState","uuidv4","name","cost","AppContext","createContext","AppProvider","props","useReducer","dispatch","Provider","value","children","ViewBudget","class","onClick","handleEditClick","EditBudget","useState","setValue","required","onChange","event","target","handleSaveClick","Budget","useContext","isEditing","setIsEditing","RemainingBudget","totalExpenses","reduce","total","item","alertType","ExpenseItem","size","ExpenseList","filteredExpenses","setfilteredExpenses","useEffect","placeholder","searchResults","filteredExpense","toLowerCase","includes","map","AddExpenseForm","setName","setCost","onSubmit","preventDefault","parseInt","for","App","className","Remaining","ExpenseTotal","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c801190.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// 5. The reduceer - this is used to update the state, based on the action\r\nexport const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_EXPENSE\":\r\n      return {\r\n        ...state,\r\n        expenses: [...state.expenses, action.payload]\r\n      };\r\n    case \"DELETE_EXPENSE\":\r\n      return {\r\n        ...state,\r\n        expenses: state.expenses.filter(\r\n          (expense) => expense.id !== action.payload\r\n        )\r\n      };\r\n    case \"SET_BUDGET\":\r\n      return {\r\n        ...state,\r\n        budget: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// 1. Sets the initial state when the app loads\r\nconst initialState = {\r\n  budget: 2000,\r\n  expenses: [\r\n    { id: uuidv4(), name: \"Shopping\", cost: 50 },\r\n    { id: uuidv4(), name: \"Holiday\", cost: 300 },\r\n    { id: uuidv4(), name: \"Transportation\", cost: 70 },\r\n    { id: uuidv4(), name: \"Fuel\", cost: 40 },\r\n    { id: uuidv4(), name: \"Child Care\", cost: 500 }\r\n  ]\r\n};\r\n\r\n// 2. Creates the context this is the thing our components import and use to get the state\r\nexport const AppContext = createContext();\r\n\r\n// 3. Provider component - wraps the components we want to give access to the state\r\n// Accepts the children, which are the nested(wrapped) components\r\nexport const AppProvider = (props) => {\r\n  // 4. Sets up the app state. takes a reducer, and an initial state\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // 5. Returns our context. Pass in the values we want to expose\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        expenses: state.expenses,\r\n        budget: state.budget,\r\n        dispatch\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst ViewBudget = (props) => {\r\n  return (\r\n    <>\r\n      <span>Budget: £{props.budget}</span>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        onClick={props.handleEditClick}\r\n      >\r\n        Edit\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewBudget;\r\n","import React, { useState } from 'react';\r\n\r\nconst EditBudget = (props) => {\r\n\tconst [value, setValue] = useState(props.budget);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\trequired='required'\r\n\t\t\t\ttype='number'\r\n\t\t\t\tclass='form-control mr-3'\r\n\t\t\t\tid='name'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\ttype='button'\r\n\t\t\t\tclass='btn btn-primary'\r\n\t\t\t\tonClick={() => props.handleSaveClick(value)}\r\n\t\t\t>\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EditBudget;","import React, { useState, useContext } from \"react\";\r\nimport ViewBudget from \"./ViewBudget\";\r\nimport EditBudget from \"./EditBudget\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst Budget = () => {\r\n  const { budget, dispatch } = useContext(AppContext);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveClick = (value) => {\r\n    dispatch({\r\n      type: \"SET_BUDGET\",\r\n      payload: value\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div class=\"alert alert-secondary p-3 d-flex align-items-center justify-content-between\">\r\n      {isEditing ? (\r\n        <EditBudget handleSaveClick={handleSaveClick} budget={budget} />\r\n      ) : (\r\n        // For part 1 render component inline rather than create a seperate one\r\n        <ViewBudget handleEditClick={handleEditClick} budget={budget} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst RemainingBudget = () => {\r\n  const { expenses, budget } = useContext(AppContext);\r\n\r\n  const totalExpenses = expenses.reduce((total, item) => {\r\n    return (total += item.cost);\r\n  }, 0);\r\n\r\n  const alertType = totalExpenses > budget ? \"alert-danger\" : \"alert-success\";\r\n\r\n  return (\r\n    <div class={`alert p-4 ${alertType}`}>\r\n      <span>Remaining: £{budget - totalExpenses}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemainingBudget;\r\n","import React, { useContext } from \"react\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const handleDeleteExpense = () => {\r\n    dispatch({\r\n      type: \"DELETE_EXPENSE\",\r\n      payload: props.id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      {props.name}\r\n      <div>\r\n        <span class=\"badge badge-primary badge-pill mr-3\">£{props.cost}</span>\r\n        <TiDelete size=\"1.5em\" onClick={handleDeleteExpense} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst ExpenseList = () => {\r\n  const { expenses } = useContext(AppContext);\r\n\r\n  const [filteredExpenses, setfilteredExpenses] = useState(expenses || []);\r\n\r\n  useEffect(() => {\r\n    setfilteredExpenses(expenses);\r\n  }, [expenses]);\r\n\r\n  const handleChange = (event) => {\r\n    const searchResults = expenses.filter((filteredExpense) =>\r\n      filteredExpense.name.toLowerCase().includes(event.target.value)\r\n    );\r\n    setfilteredExpenses(searchResults);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control mb-2 mr-sm-2\"\r\n        placeholder=\"Type to search...\"\r\n        onChange={handleChange}\r\n      />\r\n      <ul class=\"list-group mt-3 mb-3\">\r\n        {filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            id={expense.id}\r\n            name={expense.name}\r\n            cost={expense.cost}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst AddExpenseForm = (props) => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const expense = {\r\n      id: uuidv4(),\r\n      name,\r\n      cost: parseInt\r\n    };\r\n\r\n    dispatch({\r\n      type: \"ADD_EXPENSE\",\r\n      payload: expense\r\n    });\r\n\r\n    setName(\"\");\r\n    setCost(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm col-lg-4\">\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            required=\"required\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"col-sm col-lg-4\">\r\n          <label for=\"cost\">Cost</label>\r\n          <input\r\n            required=\"required\"\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            id=\"cost\"\r\n            value={cost}\r\n            onChange={(event) => setCost(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm\">\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddExpenseForm;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst RemainingBudget = () => {\r\n  const { expenses, budget } = useContext(AppContext);\r\n\r\n  const totalExpenses = expenses.reduce((total, item) => {\r\n    return (total += item.cost);\r\n  }, 0);\r\n\r\n  const alertType = totalExpenses > budget ? \"alert-danger\" : \"alert-success\";\r\n\r\n  return (\r\n    <div class={`alert p-4 ${alertType}`}>\r\n      <span>Remaining: £{budget - totalExpenses}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemainingBudget;\r\n","import \"./styles.css\";\n\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { AppProvider } from \"./context/AppContext\";\nimport Budget from \"./components/Budget\";\nimport ExpenseTotal from \"./components/ExpenseTotal\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport AddExpenseForm from \"./components/AddExpenseForm\";\nimport RemainingBudget from \"./components/Remaining\";\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <div className=\"container\">\n        <h1 className=\"mt-3\">My Budget Planner</h1>\n        <div className=\"row mt-3\">\n          <div className=\"col-sm\">\n            <Budget />\n          </div>\n          <div className=\"col-sm\">\n            <RemainingBudget />\n          </div>\n          <div className=\"col-sm\">\n            <ExpenseTotal />\n          </div>\n        </div>\n        <h3 className=\"mt-3\">Expenses</h3>\n        <div className=\"row \">\n          <div className=\"col-sm\">\n            <ExpenseList />\n          </div>\n        </div>\n        <h3 className=\"mt-3\">Add Expense</h3>\n        <div className=\"row mt-3\">\n          <div className=\"col-sm\">\n            <AddExpenseForm />\n          </div>\n        </div>\n      </div>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}